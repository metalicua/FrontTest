/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */button,hr,input{overflow:visible}img,legend{max-width:100%}progress,sub,sup{vertical-align:baseline}html{line-height:1.15;-webkit-text-size-adjust:100%}details,main{display:block}h1{font-size:2em}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;text-decoration:none}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}@media (min-width:320px){h1,h2{font-size:22px;line-height:22px}.container{max-width:94%}.col{max-width:100%}}@media (min-width:768px){h1{font-size:42px;line-height:50px}h2{font-size:32px;line-height:38px}h3,h4{font-size:22px}}h1,h2,h3,h4{margin:0;font-family:Epilogue,sans-serif;color:#111563}p{margin:0}body{margin:0;font-family:"Open Sans",sans-serif;font-size:18px;font-weight:400;color:#63718e}.container{padding:0 10px;margin:0 auto}.row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}ul{margin:0}.sprite{display:none}.main-logo{height:45px;width:115px}.header-icon{width:24px;height:24px;fill:#63718e;-webkit-transition:.3s all;-o-transition:.3s all;transition:.3s all}.card-icon{width:60px;height:60px}@media (min-width:320px){.nav{display:none;position:absolute;top:25%;right:10%}.nav__list{display:block}}@media (min-width:576px){.nav{position:absolute;top:25%;right:10%}.nav__list{display:block}}@media (min-width:768px){.container{max-width:90%}.nav{display:block;position:static}.nav__list{display:-webkit-box;display:-ms-flexbox;display:flex}.nav__link{margin-right:10px;font-size:15px;color:#63718e;-webkit-transition:.3s all;-o-transition:.3s all;transition:.3s all}.nav__link:hover{color:#c774ee}.nav__link:last-child{margin-right:0}}.nav__list{list-style:none}.nav__link{margin-right:15px}.primary{color:#fff;background-color:#c774ee;border:2px solid #c774ee;-webkit-box-shadow:0 5px 10px rgba(76,174,80,0);box-shadow:0 5px 10px rgba(76,174,80,0)}.primary:hover{-webkit-box-shadow:0 5px 10px rgba(76,174,80,.3);box-shadow:0 5px 10px rgba(76,174,80,.3)}.secondary{color:#63718e;border:2px solid #63718e}.secondary:hover{color:#c774ee;border:2px solid #c774ee}.btn,.btn-cta{font-weight:700;border-radius:10px}.btn-cta{font-size:15px}.btn{padding:10px 0;font-size:20px}@media (min-width:320px){.card{position:absolute;right:0;bottom:3%;width:253px;padding:29px 19px 32px 28px;background-color:#fff;-webkit-box-shadow:0 2px 16px rgba(32,108,164,.16);box-shadow:0 2px 16px rgba(32,108,164,.16);border-radius:8px}.card__title{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:10px;font-weight:700}.card__title .card-icon{margin-right:10px}.card__text p{font-size:16px;line-height:24px}}@media (min-width:576px){.card{right:5%;bottom:10%}}@media (min-width:768px){.card{padding:29px 28px 28px 26px;width:324px;right:0;bottom:40%}}@media (min-width:992px){.col{max-width:50%}.card{right:20%}}@media (min-width:1200px){.container{max-width:1180px}.card{right:22%;bottom:-7%}}@media (min-width:320px){.header,.header__burger{position:relative}.header .container{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-item-align:center;align-self:center}.header__button{display:none}.header__burger{width:35px;height:15px;display:block;margin-left:10px;cursor:pointer}.header__burger::after,.header__burger::before{content:""}.header__burger span,.header__burger::after,.header__burger::before{height:3px;width:100%;position:absolute;background:#515758;margin:0 auto}.header__burger span{top:14px;right:20%}.header__burger::after{top:0;right:20%}.header__burger::before{bottom:5px;right:20%}.header__burger--open span{opacity:0;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.header__burger--open:before{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);top:5px;-webkit-transition:.4s;-o-transition:.4s;transition:.4s}.header__burger--open:after{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);top:5px;-webkit-transition:.4s;-o-transition:.4s;transition:.4s}.icons__link{display:none;font-weight:700}.icons__link:hover{color:#c774ee}.icons__link:hover svg{fill:#c774ee}}@media (min-width:768px){.header__btn,.header__nav{margin-right:10px}.header__burger{display:none}.header__button{display:-webkit-box;display:-ms-flexbox;display:flex}.header__btn{padding:6px 24px}}@media (min-width:992px){.header .icons__link,.header__btn,.header__nav{margin-right:15px;-webkit-transition:.3s all;-o-transition:.3s all;transition:.3s all}.icons__link{display:-webkit-box;display:-ms-flexbox;display:flex}}@media (min-width:1200px){.header .icons__link,.header__btn,.header__nav{margin-right:30px}}@media (min-width:320px){.promo{background:url(../img/section-bg.png) 10% 93% no-repeat;background-size:80%}.promo__wrap{background:url(../img/dots.png) 20% 74% no-repeat;background-size:55%}.promo .container{padding:50px 0;display:block}.promo__title{padding-bottom:20px}.promo__text{padding-bottom:30px}.promo__btn{padding-bottom:40px}.promo__link{width:100%;display:block;text-align:center}}@media (min-width:576px){.promo{background-size:80%;background-position:25% 95%}.promo__wrap{background-size:65%;background-position:15% 65%}.promo__link{width:50%;margin:0 auto}}@media (min-width:768px){.promo{background-size:50%;background-position:72% 90%}.promo__wrap{background-size:40%;background-position:55% 65%}.promo__btn{width:280px}.promo__link{width:100%}.promo__image{width:66%;margin-left:auto}}@media (min-width:992px){.promo{background-size:45%;background-position:85% 50%}.promo__wrap{background-size:30%;background-position:70% 35%}.promo .container{padding:105px 0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.promo__image{width:100%}}@media (min-width:1200px){.promo{background-size:30%;background-position:70% 50%}.promo__wrap{background-size:20%;background-position:65% 28%}}@media (min-width:320px){.watch{background:url(../img/section-bg.png) 40% 70% no-repeat;background-size:90%}.watch__wrap{background:url(../img/dots.png) 10% 67% no-repeat;background-size:60%}.watch__text,.watch__title{padding-bottom:20px}.watch__text p{font-size:16px;line-height:24px}.watch__btn{width:180px;text-align:center}.watch__link{display:block}.watch__image{position:relative;padding-bottom:190px}}@media (min-width:768px){.watch{background-size:70%;background-position:-60% 72%}.watch__wrap{background-size:32%;background-position:3% 63%}.watch__image{padding-bottom:85px}.watch__image img{margin-left:-135px}}@media (min-width:992px){.watch{background-size:50%;background-position:-15% 72%}.watch__image{padding-bottom:30px}}@media (min-width:1200px){.watch{background-size:20%;background-position:22% 5%}.watch__wrap{background-size:18%;background-position:14% 42%}.watch .container{padding-bottom:125px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.watch__content,.watch__image{width:50%}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
